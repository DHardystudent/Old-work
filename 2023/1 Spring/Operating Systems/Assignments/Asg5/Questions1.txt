Q1: Latches are a concurrency construct used to guarantee physical consistency of data.   This is a variation on condition variables and barriers.    When the latch is, only the thread setting the latch can access a protected section of code while all other threads trying to get that into that code block until the latch is opened.   Then, all waiting threads continue.

Using one or more mutexes and condition variables,  define a C++ class (with appropriate constructors and destructors) that implements the latch construct.   Provide a constructor that one can use to pass a size_t value that a counter value.

The latch should have four methods:

void count_down(unsigend int amtToDecrement): decrements the counter in non-blocking manner
bool try_wait(): tests to see if the counter has reached zero
void wait(): blocks until the counter reaches zero
void arrive_and_wait(): decrements the counter until it reaches zero
So, the thread that locks the latch will create a new instance of this class and then continue working, using count_down() to decrement the counter as it's doing work.    Threads that need to wait will use either wait() or arrive_and_wait() to block until the latch counter reaches zero.

Make certain you implement sufficient test cases for your code.